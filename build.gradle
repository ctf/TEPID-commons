buildscript {

    repositories {
        mavenCentral()
    }

    apply plugin: "ca.mcgill.science.tepid.commons"

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${tepid.kotlin}"
    }
    wrapper.setDistributionType(Wrapper.DistributionType.ALL)
}

apply plugin: "ca.mcgill.science.tepid.commons"

allprojects {
    group "ca.mcgill.science.tepid"
    version tepid.tepidCommons
}

ext {
    // can be passed with -Ptepid_config_dir=CONFIG_DIR, or set in an environment variable "tepid_config_dir"
    tepid_config_dir = project.findProperty('tepid_config_dir') ?: "$System.env.tepid_config_dir"
}

task copyConfigs(type: Copy) {
    println(tepid_config_dir)
    from "$tepid_config_dir/LDAPTestUser.properties",
            "$tepid_config_dir/URL.properties"
    into "config"
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven'

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    test {
        dependsOn cleanTest
        testLogging.showStandardStreams = true
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    dependencies {
        compile tepidDependency.kotlin

        testRuntimeOnly(
                'org.junit.jupiter:junit-jupiter-engine:5.1.0',
                'org.junit.vintage:junit-vintage-engine:5.1.0'
        )
        
        testCompile tepidDependency.junit
        testCompile "org.junit.jupiter:junit-jupiter-engine:5.3.1"
        testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
        testCompile tepidDependency.kotlinTest
        testCompile "io.mockk:mockk:1.8"
    }

}